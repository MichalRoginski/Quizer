// <auto-generated />
using EFCoreDataAccessLib.DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace EFCoreDataAccessLib.Migrations
{
    [DbContext(typeof(QuizContext))]
    [Migration("20210613144900_third")]
    partial class third
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.7")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("EFCoreDataAccessLib.Models.Question", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("badanswer1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("badanswer2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("badanswer3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("goodanswer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("question")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("id");

                    b.ToTable("questions");
                });

            modelBuilder.Entity("EFCoreDataAccessLib.Models.Quiz", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("category")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("numberOfQuestions")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.ToTable("quizzes");
                });

            modelBuilder.Entity("QuestionQuiz", b =>
                {
                    b.Property<int>("questionsid")
                        .HasColumnType("int");

                    b.Property<int>("quizesid")
                        .HasColumnType("int");

                    b.HasKey("questionsid", "quizesid");

                    b.HasIndex("quizesid");

                    b.ToTable("QuestionQuiz");
                });

            modelBuilder.Entity("QuestionQuiz", b =>
                {
                    b.HasOne("EFCoreDataAccessLib.Models.Question", null)
                        .WithMany()
                        .HasForeignKey("questionsid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EFCoreDataAccessLib.Models.Quiz", null)
                        .WithMany()
                        .HasForeignKey("quizesid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
